version: "3.6"

services:
  mlflow:
    restart: always
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    expose:
        - "5000"
    environment:
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    command: mlflow server --backend-store-uri postgresql://postgres:defaultPostgresPassword01@postgres:5432/mlflow_api --default-artifact-root s3://mlflow_bucket/mlflow/ --host 0.0.0.0
    ports:
      - 5000:5000
    depends_on:
        - postgres

  backend:
    env_file:
      - ${ENV:-./.env}
    environment:
      PYTHONUNBUFFERED: 0
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    command: >
      /bin/sh -c "
        nodemon -e py --watch src --exec 'flake8 src/ && python src/app.py';
      "
    ports:
      - 8000:8000
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - postgres

  postgres:
    env_file:
      - ${ENV:-./.env}
    image: postgres:10.3
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "defaultPostgresPassword01"
      POSTGRES_DB: "mlflow_api"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
    ports:
      - 5432:5432
    volumes:
      - ${HOME}/databases/mlflow_api/postgres:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 15s
      timeout: 30s
      retries: 3
      
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
        - '2181:2181'
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
        - "moby:127.0.0.1"
    depends_on:
        - backend

  kafka:
    image: confluentinc/cp-kafka:5.2.0
    hostname: kafka
    container_name: kafka
    ports:
        - '9092:9092'
    depends_on:
        - zookeeper
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    extra_hosts:
        - "moby:127.0.0.1"
    
  kafka-create-topics:
    image: confluentinc/cp-kafka:5.2.0
    depends_on:
        - kafka
    hostname: kafka-create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                        cub kafka-ready -b kafka:9092 1 20 && \
                        kafka-topics --create --topic topic --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
                        sleep infinity'"
    environment:
        KAFKA_BROKER_ID: ignored
        KAFKA_ZOOKEEPER_CONNECT: ignored
    extra_hosts:
        - "moby:127.0.0.1"
    
  jupyter:
    build:
      context: ./
      dockerfile: ./jupyter/Dockerfile
    ports:
        - '8888:8888'
    volumes:
        - ./notebooks:/home/jovyan/work:rw
    # Want the jupyter-client to start last so we can more easily see the URL/Token to use when launching Jupyter Labs in the browser
    depends_on:
        - kafka
